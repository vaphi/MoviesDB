{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Va Phi\\\\Desktop\\\\web-template-SERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Va Phi\\\\Desktop\\\\web-template-SERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Va Phi\\\\Desktop\\\\web-template-SERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Va Phi\\\\Desktop\\\\web-template-SERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Va Phi\\\\Desktop\\\\web-template-SERN\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Va Phi\\\\Desktop\\\\web-template-SERN\\\\client\\\\src\\\\pages\\\\MoviesSearch.js\";\nimport React, { Component } from 'react';\nimport '../Misc/css/MoviesSearch.css';\nimport $ from 'jquery';\n\nvar MovieSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MovieSearch, _Component);\n\n  function MovieSearch(props) {\n    var _this;\n\n    _classCallCheck(this, MovieSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MovieSearch).call(this, props));\n    _this.state = {}; // const movies = [\n    // \t{id:0, poster_src:\"\", title:\"Avengers: Infinity War\", overview: \"summary\"},\n    // \t{id:1, poster_src:\"\", title:\"Avengers\", overview: \"summary\"},\n    // \t{id:2, poster_src:\"\", title:\"Avengers: Infinity War\", overview: \"summary\"},\n    // \t{id:3, poster_src:\"\", title:\"Avengers\", overview: \"summary\"}\n    // ]\n    // this.state = {row: [\n    // \t<p key=\"1\">this is my row0</p>,\n    // \t<p key=\"2\">this is my row1</p>,\n    // \t<p key=\"3\">this is my row2</p>\n    // ]}\n    // var movieRows = [];\n    // movies.forEach((movie) => {\n    // \tconsole.log(movies.id)\n    // \tconst movieGrid = \n    // \t<div class=\"col-sm-6\" key={movie.id}>\n    // \t\t<img alt=\"poster\" src= {movie.poster_src}/>\n    // \t\t{movie.title}\n    // \t\t<p>{movie.overview}</p>\n    // \t  </div> \n    // movieRows.push(movieGrid)\n    // })\n    // this.state = {rows: movieRows};\n\n    _this.performSearch();\n\n    return _this;\n  }\n\n  _createClass(MovieSearch, [{\n    key: \"performSearch\",\n    value: function performSearch() {\n      var _this2 = this;\n\n      console.log(\"perform search using movieDB\");\n      var urlString = \"https://api.themoviedb.org/3/search/movie?include_adult=false&page=1&query=avenger&language=en-US&api_key=439e525f3c7b6259d2526faf374dbf4e\";\n      $.ajax({\n        url: urlString,\n        success: function success(searchResults) {\n          console.log(\"Fetched data successfully\"); //console.log(searchResults)\n\n          var results = searchResults.results; //console.log(results[0])\n\n          var movieRows = [];\n          results.forEach(function (movie) {\n            console.log(movie.id);\n            var movieGrid = React.createElement(\"div\", {\n              class: \"col-sm-6\",\n              key: movie.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              alt: \"poster\",\n              src: movie.poster_src,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60\n              },\n              __self: this\n            }), movie.title, React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62\n              },\n              __self: this\n            }, movie.overview));\n            movieRows.push(movieGrid);\n          });\n          _this2.state = {\n            rows: movieRows\n          };\n        },\n        error: function error(xhr, status, err) {\n          console.error(\"Failed to fetch data\");\n        }\n      });\n    }\n  }, {\n    key: \"searchChangeHandler\",\n    value: function searchChangeHandler(event) {\n      console.log(event.target.value);\n      var boundObject = this;\n      var searchTerm = event.target.value;\n      boundObject.performSearch(searchTerm);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"search-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"search-bar\",\n        placeholder: \"Please enter movie name\",\n        onChange: this.searchChangeHandler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.state.rows)));\n    }\n  }]);\n\n  return MovieSearch;\n}(Component);\n\nexport default MovieSearch;","map":{"version":3,"sources":["C:\\Users\\Va Phi\\Desktop\\web-template-SERN\\client\\src\\pages\\MoviesSearch.js"],"names":["React","Component","$","MovieSearch","props","state","performSearch","console","log","urlString","ajax","url","success","searchResults","results","movieRows","forEach","movie","id","movieGrid","poster_src","title","overview","push","rows","error","xhr","status","err","event","target","value","boundObject","searchTerm","searchChangeHandler","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport '../Misc/css/MoviesSearch.css';\r\nimport $ from 'jquery';\r\nclass MovieSearch extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {}\r\n\t\t// const movies = [\r\n\t\t// \t{id:0, poster_src:\"\", title:\"Avengers: Infinity War\", overview: \"summary\"},\r\n\t\t// \t{id:1, poster_src:\"\", title:\"Avengers\", overview: \"summary\"},\r\n\t\t// \t{id:2, poster_src:\"\", title:\"Avengers: Infinity War\", overview: \"summary\"},\r\n\t\t// \t{id:3, poster_src:\"\", title:\"Avengers\", overview: \"summary\"}\r\n\t\t// ]\r\n\r\n\t\t// this.state = {row: [\r\n\t\t// \t<p key=\"1\">this is my row0</p>,\r\n\t\t// \t<p key=\"2\">this is my row1</p>,\r\n\t\t// \t<p key=\"3\">this is my row2</p>\r\n\t\t// ]}\r\n\r\n\t\t// var movieRows = [];\r\n\t\t// movies.forEach((movie) => {\r\n\t\t// \tconsole.log(movies.id)\r\n\t\t// \tconst movieGrid = \r\n\t\t\t\r\n\t\t// \t<div class=\"col-sm-6\" key={movie.id}>\r\n\t\t// \t\t<img alt=\"poster\" src= {movie.poster_src}/>\r\n\t\t// \t\t{movie.title}\r\n\t\t// \t\t<p>{movie.overview}</p>\r\n\t\t// \t  </div> \r\n\t\t\r\n\t\t// movieRows.push(movieGrid)\r\n\t\t// })\r\n\r\n\t\t// this.state = {rows: movieRows};\r\n\r\n\t\tthis.performSearch()\r\n\t}\r\n\r\n\tperformSearch() {\r\n\t\tconsole.log(\"perform search using movieDB\")\r\n\t\tconst urlString = \"https://api.themoviedb.org/3/search/movie?include_adult=false&page=1&query=avenger&language=en-US&api_key=439e525f3c7b6259d2526faf374dbf4e\"\r\n\t\t$.ajax({\r\n\t\t\turl: urlString,\r\n\t\t\tsuccess: (searchResults) => {\r\n\t\t\t\tconsole.log(\"Fetched data successfully\")\r\n\t\t\t\t//console.log(searchResults)\r\n\t\t\t\tconst results = searchResults.results\r\n\t\t\t\t//console.log(results[0])\r\n\t\t\t\t\r\n\t\t\t\tvar movieRows = []\r\n\t\t\t\t\r\n\t\t\t\tresults.forEach((movie) => {\r\n\t\t\t\t\t\tconsole.log(movie.id)\r\n\t\t\t\t\t\tconst movieGrid = \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"col-sm-6\" key={movie.id}>\r\n\t\t\t\t\t\t\t<img alt=\"poster\" src= {movie.poster_src}/>\r\n\t\t\t\t\t\t\t{movie.title}\r\n\t\t\t\t\t\t\t<p>{movie.overview}</p>\r\n\t\t\t\t\t\t  </div> \r\n\t\t\t\t\t\r\n\t\t\t\t\tmovieRows.push(movieGrid)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.state = {rows: movieRows};\r\n\t\t\t},\r\n\t\t\terror: (xhr, status, err) => {\r\n\t\t\t\tconsole.error(\"Failed to fetch data\")\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tsearchChangeHandler(event) {\r\n\t\tconsole.log(event.target.value)\r\n\t\tconst boundObject = this\r\n\t\tconst searchTerm = event.target.value\r\n\t\tboundObject.performSearch(searchTerm)\r\n\t}\r\n\t\r\nrender() {\r\nreturn(\r\n\t<div>\r\n\t<div class=\"search-container\">\r\n  \t\t<div class=\"row\">\r\n    \t\t<div class=\"col-sm\">\r\n      \t\t\t<input className=\"search-bar\" placeholder=\"Please enter movie name\" onChange={this.searchChangeHandler.bind(this)}/> \r\n    \t\t</div>\r\n  \t\t</div>\r\n\t</div>\r\n\t<div class=\"container\">\r\n\t<div class=\"row\" >\r\n\t{this.state.rows}\r\n\t</div>\r\n\t</div>\r\n</div>\r\n\t)\r\n\t}\r\n}\r\n\r\nexport default MovieSearch;"]},"metadata":{},"sourceType":"module"}